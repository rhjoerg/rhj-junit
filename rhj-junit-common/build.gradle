
buildscript {

	repositories {
	
		mavenCentral()
	}
}

plugins {

	id 'java-library'
	id 'jacoco'
	id 'signing'
	id 'maven'
}

repositories {

	mavenCentral()
}

dependencies {

	compile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.1.0'
	
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.1.0'
	testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.1.0'
}

build.dependsOn jacocoTestReport 

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'ch.rhj.junit'
version '0.2.0-SNAPSHOT'

test {

	useJUnitPlatform()
}

task sourcesJar(type: Jar) {

	from sourceSets.main.allJava
	classifier 'sources'
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {

	from javadoc
	classifier 'javadoc'
}

artifacts {

	archives sourcesJar, javadocJar
}

signing {

	useGpgCmd()
	
	sign configurations.archives
}

uploadArchives {

	repositories {
	
		mavenDeployer {
		
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			
			repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}
			
			snapshotRepository(url: "file://$buildDir/repository")
			
			pom {
				project {
				
					name 'RHJ JUnit Common'
					packaging 'jar'
					description 'Common JUnit extensions'
					url 'https://github.com/rhjoerg/rhj-junit'
					
					developers {
					
						developer {
							id 'rhjoerg'
							name 'Roger H. JÃ¶rg'
							email 'rhjoerg@gmail.com'
						}
					}
					
					scm {
						connection 'scm:git:git://github.com/rhjoerg/rhj-junit.git'
						developerConnection 'scm:git:ssh://github.com:rhjoerg/rhj-junit.git'
						url 'https://github.com/rhjoerg/rhj-junit/tree/master'
					}
					
					issueManagement {
					
						system 'Github'
						url 'https://github.com/rhjoerg/rhj-junit/issues'
					}
					
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}
				}
				
				whenConfigured {
					p -> p.dependencies = p.dependencies.findAll { d -> d.scope != 'test' }
				}
			}
		}
	}
}

uploadArchives.dependsOn check
